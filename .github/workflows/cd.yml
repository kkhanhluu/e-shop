name: Publish
on:
  push:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - name: Get the two latest versions
        run: |
          CURRENT_VERSION=$(git tag -l "v*" --sort=-version:refname | head -n 1)
          LAST_VERSION=$(git tag -l "v*" --sort=-version:refname | head -n 2 | awk 'NR == 2 { print $1 }')
          echo "current_version=$(echo $CURRENT_VERSION)" >> $GITHUB_ENV
          echo "last_version=$(echo $LAST_VERSION)" >> $GITHUB_ENV    

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - run: yarn install --frozen-lockfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish docker images to docker hub
        run: |
          for APP in $(npx nx affected:apps --base=$last_version --head=$current_version --plain | awk 'NR > 2 && $1 != "Done" { print $1 }')
          do
            cd ./dist/libs/$APP
            npx nx run $APP:push-to-docker-hub
            cd ../..
          done

      - name: Publish libraries
        run: |
          for LIBRARY in $(npx nx affected:libs --base=$last_version --head=$current_version --plain | awk 'NR > 2 && $1 != "Done" { print $1 }')
          do
            cd ./dist/libs/$LIBRARY
            mvn -B -Pgithub deploy
            cd ../..
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
